require 'rubygems'
gem 'albacore', '<=0.1.5'
require 'albacore'
require 'fileutils'

MSBUILD_PATH = File.join(ENV['SYSTEMROOT'], "Microsoft.NET", "Framework", "v4.0.30319", "MSBuild.exe").gsub(File::SEPARATOR, File::ALT_SEPARATOR || File::SEPARATOR)

#BEGIN FIX
class Exec
  include RunCommand
  include YAMLConfig
  include Logging
  
  def initialize
    @path_to_command=''
    @parameters = []
    super()
  end
    
  def execute
    result = run_command "Exec", ""
    
    failure_message = 'Exec Failed. See Build Log For Detail'
    fail_with_message failure_message if !result
  end
end
#END FIX


msbuild :clean do |msb|
    msb.path_to_command = MSBUILD_PATH
    msb.properties = { :configuration => :"Release" }
    msb.targets [:Clean]
    msb.solution = 'CWServiceBus.sln'
    rm_rf Dir.glob('build')
    rm_f Dir.glob('TestResult.xml')
end

task :init => ["clean"] do
    mkdir_p 'build'
end

msbuild :compile => ["init"] do |msb|
    msb.path_to_command = MSBUILD_PATH
    msb.properties = { :configuration => :"Release", :OutDir => :"#{pwd}/build/" }
    msb.targets [:Rebuild]
    msb.solution = 'CWServiceBus.sln'
end

task :tests => ["init", "compile"] do
    doTest("CWServiceBus.UnitTests.dll")
end

task :build => ["init", "compile", "tests"]
task :default => ["build"]

def doTest(asm)
  nunit = NUnitTestRunner.new
  nunit.path_to_command = "tools/nunit/nunit-console.exe"
  nunit.assemblies "build/" + asm
  nunit.options '/xml=TestResult.xml'
  nunit.execute
end